
name: CI-CD

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

  workflow_dispatch:

jobs:
  build_test:
    name: Build & Test App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    if: "contains(github.event.commits[0].message, '[build front-end]')"

    steps:
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          npm install
      - name: build & test
        run: |
          npm run test

  push_to_DockerHub:
    name: Push Images to DockerHub
    runs-on: ubuntu-latest

    needs: [ build_test ]

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/react-frontend:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/react-frontend:latest
          run: |
            echo "runing the docker image"
            echo "Testing the nodejs  app endpoints"
            echo ${{ steps.docker_build.outputs.digest }}

  deploy_to_Heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [ push_to_DockerHub ]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
